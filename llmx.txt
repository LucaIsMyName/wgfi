# Wiener Beserl Park Index (WBI) - Project Documentation

## Project Overview
The Wiener Beserl Park Index (WBI) is a comprehensive web application that serves as an index for all parks in Vienna, Austria. It provides users with detailed information about Vienna's 1000+ parks using official open government data.

## Tech Stack
- **Frontend Framework**: Vite + React 18 + TypeScript
- **Styling**: Tailwind CSS (via CDN)
- **Routing**: React Router DOM
- **Data Source**: Vienna Open Government Data (data.gv.at)
- **Build Tool**: Vite
- **Package Manager**: npm

## Project Structure
```
src/
├── components/
│   └── Navigation.tsx          # Main navigation component
├── pages/
│   ├── HomePage.tsx           # Landing page
│   ├── ParksListPage.tsx      # Parks listing with search/filter
│   ├── ParkDetailPage.tsx     # Individual park details
│   └── MapPage.tsx            # Interactive map (placeholder)
├── App.tsx                    # Main app with routing setup
├── main.tsx                   # App entry point
└── index.css                  # Global styles

public/
├── .htaccess                  # SPA routing support for Apache
└── index.html                 # Main HTML template
```

## Key Features
- **Park Discovery**: Browse all Vienna parks with search and filtering
- **Detailed Information**: Individual park pages with amenities, location, and metadata
- **Responsive Design**: Mobile-first approach with Tailwind CSS
- **SPA Routing**: Client-side routing with proper URL structure
- **Open Data Integration**: Real-time data from Vienna's official APIs

## Data Sources
- **Primary**: Vienna Parks Dataset (Parkanlagen Standorte Wien)
- **Format**: WFS (Web Feature Service) JSON endpoints
- **API Access**: Free, no authentication required
- **Available Data**: Park names, locations, districts, coordinates, amenities

## URL Structure
- `/` - Homepage
- `/parks` - All parks listing
- `/park/:id` - Individual park details
- `/map` - Interactive map view

## Development Setup
1. `npm install` - Install dependencies
2. `npm run dev` - Start development server
3. Access at `http://localhost:5173/`

## API Integration (Planned)
- Vienna WFS endpoints for real-time park data
- District boundaries for geographic context
- Amenities and facilities information
- Accessibility data

## Deployment Notes
- Includes .htaccess for SPA routing support
- Optimized for static hosting (Netlify, Vercel, etc.)
- No backend required - pure frontend application

## Future Enhancements
- Interactive map with Leaflet/MapBox
- Favorites system with local storage
- Advanced search and filtering
- Public transport integration
- Photo galleries for parks
- Accessibility information display

## Code Style
- TypeScript for type safety
- Functional components with hooks
- Tailwind CSS for styling
- React Router for navigation
- Performance-optimized with Vite

## Last Updated
September 2025 - Initial setup and routing implementation complete
